{"version":3,"sources":["Sidebar.tsx","MenuOptions/WebPage.tsx","MenuOptions/About.tsx","MenuOptions/homeImage.png","MenuOptions/Welcome.tsx","RestClient.ts","MenuOptions/WebPageAvailEnv.tsx","MenuOptions/AvailableEnvironments.tsx","MenuOptions/LogInForm.tsx","MenuOptions/LogIn.tsx","MenuOptions/AddConfiguration.tsx","MenuOptions/EditConfiguration.tsx","MenuOptions/EditEnvironment.tsx","MenuOptions/AddEnvironment.tsx","MenuOptions/WebPageConfigurations.tsx","MenuOptions/DeleteConfiguration.tsx","MenuOptions/Configurations.tsx","MenuOptions/LogOut.tsx","MenuOptions/BackDoor.tsx","App.tsx","index.tsx"],"names":["Sidebar","className","iconShape","title","icon","to","WebPage","header","subheader","listHeaders","Container","Jumbotron","Accordion","defaultActiveKey","map","props","i","Card","Header","Toggle","as","Button","variant","buttonVariant","eventKey","buttonText","Collapse","Body","cardBody","about","About","Fragment","welcome","Welcome","src","superhero","RestClient","url","baseUrl","window","fetch","response","json","id","configuration","method","headers","body","JSON","stringify","environment","username","WebPageAvailEnv","React","useState","environments","setAvailableEnvironments","useEffect","getEnvironments","then","catch","err","alert","environmentName","description","ListGroup","configdatas","props2","Item","configName","application","configValue","timestamp","AvailableEnvironments","LogInForm","show","setShow","handleClose","onClick","Modal","onHide","backdrop","keyboard","closeButton","Title","Form","Group","controlId","Label","Control","type","placeholder","Footer","password","document","getElementById","value","hash","CryptoJS","SHA256","salt","lib","WordArray","create","keyiv","PBKDF2","keySize","iterations","key","words","slice","iv","cipherstring","AES","encrypt","toString","ciphertext","undefined","token","setToken","getToken","loggedIn","LogInManager","MatchToken","EncryptData","AddConfiguration","setValue","dateTime","Date","onSubmit","e","preventDefault","toISOString","environmentId","addConfiguration","target","reset","push","maxLength","EditConfig","EditConfiguration","size","defaultValue","editConfiguration","EditEnv","EditEnvironment","newEnvironment","editEnvironment","AddEnvironment","addEnvironment","WebPageConfigurations","deleteConfiguration","Configurations","logIn","LogOut","BackDoorLogIn","require","Logn","App","exact","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a4586109.chunk.js","sourcesContent":["import { BrowserRouter as Router, NavLink } from 'react-router-dom';\r\nimport { ProSidebar, Menu, MenuItem, SubMenu } from 'react-pro-sidebar';\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport { IoHome, IoList, IoDocumentLock } from \"react-icons/io5\";\r\n\r\nfunction Sidebar() {\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <ProSidebar>\r\n      <Menu iconShape=\"square\">\r\n      <MenuItem><div className=\"sidebarHeader\">Configuration Manager</div></MenuItem>\r\n      \r\n      <SubMenu title=\"Home\" icon={<IoHome />}>\r\n        <MenuItem><NavLink to=\"/\">Welcome</NavLink></MenuItem>\r\n        <MenuItem><NavLink to=\"/about\">About</NavLink></MenuItem>\r\n      </SubMenu>\r\n      \r\n      <SubMenu title=\"Configuration Data\" icon={<IoList />}>\r\n        <MenuItem><NavLink to=\"/availableEnvironments\">Available Environments</NavLink></MenuItem>\r\n      </SubMenu>\r\n\r\n      <SubMenu title=\"Admin\" icon={<IoDocumentLock />}>\r\n        <MenuItem><NavLink to=\"/configurations\">Edit Properties</NavLink></MenuItem>\r\n        <MenuItem><NavLink to=\"/logOut\">Log out</NavLink></MenuItem>\r\n        \r\n      </SubMenu>\r\n      </Menu>\r\n      </ProSidebar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;","import Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nexport default function WebPage({header, subheader, listHeaders}: any) {\r\n    return (\r\n      <div className=\"configurations\">\r\n        \r\n        <Container className=\"p-3\">\r\n            <Jumbotron>\r\n                <h1 className=\"header\">\r\n                {header}\r\n                </h1>\r\n            </Jumbotron>\r\n            <h2>{subheader}</h2>\r\n        </Container>\r\n        \r\n        <Accordion defaultActiveKey=\"0\">\r\n        \r\n          {listHeaders.map((props: any, i: any) =>\r\n            <div>\r\n                <Card>\r\n                    <Card.Header>\r\n                        <Accordion.Toggle as={Button} variant={props.buttonVariant} eventKey={i+1}>\r\n                            {props.buttonText}\r\n                        </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey={i+1}>\r\n                        <Card.Body>{props.cardBody}</Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            </div>            \r\n          )}\r\n\r\n        </Accordion> \r\n      </div>\r\n    );\r\n  }","import React from 'react';\r\nimport WebPage from './WebPage';\r\n\r\n\r\nconst about = {\r\n  header: \"About\",\r\n  subheader: \"Configuration Manager made by Jeanette & Jon Eirik\",\r\n  listHeaders: []\r\n}\r\n\r\nexport default function About() {\r\n  return (\r\n    <React.Fragment>\r\n      <WebPage {...about} />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/homeImage.fd949f85.png\";","import React from 'react';\r\nimport WebPage from './WebPage';\r\nimport superhero from './homeImage.png'\r\n\r\n\r\nconst welcome = {\r\n  header: \"Welcome\",\r\n  subheader: \"\",\r\n  listHeaders: []\r\n}\r\n\r\nexport default function Welcome() {\r\n  return (\r\n    <div>\r\n    <React.Fragment>\r\n      <WebPage {...welcome} />\r\n    </React.Fragment>\r\n    <div className=\"welcomeImage\">\r\n      <img src={superhero}/>\r\n    </div>\r\n    </div>\r\n    \r\n    \r\n  );\r\n}\r\n\r\n","import { NamedTupleMember } from \"typescript\"\r\n\r\nexport class RestClient {\r\n\r\n    static baseUrl = \"https://localhost:44386\"\r\n\r\n    static async getEnvironments() : Promise<any> {\r\n        const url = `${RestClient.baseUrl}/api/getEnvironments`\r\n        const response = await window.fetch(url)\r\n        return await response.json()\r\n    }\r\n\r\n    \r\n    static async getEnvironment(id: number) : Promise<any> {\r\n        const url = `${RestClient.baseUrl}/api/getConfiguration/${id}`\r\n        const response = await window.fetch(url)\r\n        return await response.json()\r\n    }\r\n\r\n\r\n    static async getConfigurations() : Promise<any> {\r\n        const url = `${RestClient.baseUrl}/api/getConfigurations`\r\n        const response = await window.fetch(url)\r\n        return await response.json()\r\n    }\r\n\r\n    static addConfiguration(configuration: any) : Promise<any> {\r\n        const url = `${RestClient.baseUrl}/api/postConfiguration/`\r\n        return window.fetch(\r\n                    url, \r\n                    { \r\n                        method: 'POST', \r\n                        headers: { 'Content-Type': 'application/json' },\r\n                        body: JSON.stringify(configuration)\r\n                    }\r\n        )\r\n    }\r\n\r\n    static deleteConfiguration(id: NamedTupleMember) : Promise<any> {\r\n        const url = `${RestClient.baseUrl}/api/deleteConfiguration/${id}`\r\n        return window.fetch(\r\n                    url, \r\n                    { \r\n                        method: 'DELETE', \r\n                        headers: { 'Content-Type': 'application/json' }\r\n                    }\r\n        )\r\n    }\r\n\r\n    static editConfiguration(configuration: any) : Promise<any> {\r\n        const url = `${RestClient.baseUrl}/api/putConfiguration/`\r\n        return window.fetch(\r\n                    url, \r\n                    { \r\n                        method: 'PUT', \r\n                        headers: { 'Content-Type': 'application/json' },\r\n                        body: JSON.stringify(configuration)\r\n                    }\r\n        )\r\n    }\r\n\r\n    static editEnvironment(environment: any) : Promise<any> {\r\n        const url = `${RestClient.baseUrl}/api/putEnvironment/`\r\n        return window.fetch(\r\n                    url, \r\n                    { \r\n                        method: 'PUT', \r\n                        headers: { 'Content-Type': 'application/json' },\r\n                        body: JSON.stringify(environment)\r\n                    }\r\n        )\r\n    }\r\n\r\n    static addEnvironment(environment: any) : Promise<any> {\r\n        const url = `${RestClient.baseUrl}/api/postEnvironment/`\r\n        return window.fetch(\r\n                    url, \r\n                    { \r\n                        method: 'POST', \r\n                        headers: { 'Content-Type': 'application/json' },\r\n                        body: JSON.stringify(environment)\r\n                    }\r\n        )\r\n    }\r\n\r\n    static async getToken(username: any) : Promise<any> {\r\n        const url = `${RestClient.baseUrl}/api/getToken/${username}`\r\n        const response = await window.fetch(url)\r\n        return await response.json()\r\n    }\r\n}","import React from \"react\";\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport { RestClient } from \"../RestClient\"\r\n\r\nexport default function WebPageAvailEnv({header, subheader}: any) {\r\n    \r\n  \r\n  let [environments, setAvailableEnvironments] = React.useState<Array<any>>([])\r\n\r\n\tReact.useEffect(() => {\r\n\t\tRestClient.getEnvironments()\r\n\t\t          .then(environments => setAvailableEnvironments(environments))\r\n              .catch((err: any) => alert(err))\r\n\t}, [])\r\n  \r\n  \r\n  return (\r\n      <div className=\"configurations\">\r\n        \r\n        <Container className=\"p-3\">\r\n            <Jumbotron>\r\n                <h1 className=\"header\">\r\n                {header}\r\n                </h1>\r\n            </Jumbotron>\r\n            <h2>{subheader}</h2>\r\n        </Container>\r\n        \r\n        <Accordion defaultActiveKey=\"0\">\r\n        \r\n          {environments.map((props: any, i: any) =>\r\n            <div>\r\n                <Card>\r\n                    <Card.Header>\r\n                        <Accordion.Toggle as={Button} variant=\"primary\" eventKey={i+1} className=\"availEnvButton\">\r\n                            {props.environmentName}\r\n                        </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey={i+1}>\r\n                        <Card.Body className=\"cardBody-1\">\r\n                          <div className=\"environmentDescription\">\r\n                            <b>Environment Name: </b>{props.description}<br/>             \r\n                          <br/><b>Configuration data:</b>\r\n                          </div>\r\n                          <ListGroup>\r\n                            {props.configdatas.map((props2: any) =>\r\n                            <div>\r\n                              <ListGroup.Item>\r\n                              <b> Configuration Name: </b>{props2.configName}, \r\n                              <b> Application Name: </b>{props2.application}, \r\n                              <b> Configuration Value: </b>{props2.configValue}, \r\n                              <b> Timestamp: </b>{props2.timestamp}\r\n                              </ListGroup.Item>\r\n                            </div>\r\n                            )}\r\n                          </ListGroup>\r\n                        </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            </div>            \r\n          )}\r\n        </Accordion> \r\n      </div>\r\n    );\r\n  }","import React from \"react\";\r\nimport WebPageAvailEnv from './WebPageAvailEnv';\r\n\r\n\r\nfunction AvailableEnvironments() {\r\n\r\n  const availableEnvironments = {\r\n    header: \"Available Environments\",\r\n    subheader: \"List of Environments in Database\",\r\n  }\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t\t<div>\r\n          <React.Fragment>\r\n            <WebPageAvailEnv {...availableEnvironments} />\r\n          </React.Fragment>\r\n        </div>\r\n\t\t</div>\r\n    )\r\n}\r\nexport default AvailableEnvironments;\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { EncryptData } from './LogIn'\r\n\r\n\r\nexport default function LogInForm() {\r\n  \r\n\r\n  const handleSubmit = () => {\r\n    var password = (document.getElementById(\"username\") as HTMLInputElement).value\r\n    var username = (document.getElementById(\"password\") as HTMLInputElement).value\r\n    handleClose()\r\n    EncryptData(username, password)\r\n  }\r\n  \r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  \r\n  return (\r\n      <div className=\"logInButton\">\r\n        <Button variant=\"primary\" onClick={handleShow}>\r\n          Log in\r\n        </Button>\r\n\r\n        <Modal\r\n          show={show}\r\n          onHide={handleClose}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Modal title</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control type=\"username\" placeholder=\"Enter username\" id=\"username\" />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" placeholder=\"Enter password\" id=\"password\"/>\r\n            </Form.Group>\r\n          </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit}>Log in</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n","import React, { useState } from 'react'\r\nimport { RestClient } from \"../RestClient\"\r\nimport WebPage from './WebPage';\r\nimport LogInForm from './LogInForm'\r\nimport Configurations from './Configurations'\r\n\r\nconst logIn = {\r\n  header: \"Log In\",\r\n  subheader: \"Please log in to view this page\",\r\n  listHeaders: []\r\n}\r\n\r\nvar loggedIn: boolean;\r\n\r\nloggedIn = true\r\n\r\nfunction LogOut() {\r\n  loggedIn = false\r\n}\r\n\r\nfunction BackDoorLogIn() {\r\n  loggedIn = true\r\n}\r\n\r\nfunction LogInManager() {\r\n  \r\n  if (loggedIn == true) {\r\n    return (\r\n      <React.Fragment>\r\n        <Configurations/>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n      <React.Fragment>\r\n        <WebPage {...logIn} />\r\n        <LogInForm/>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nfunction EncryptData(username: any, password: any) {\r\n\r\n\r\n  var hash = CryptoJS.SHA256(password);\r\n  var salt = CryptoJS.lib.WordArray.create([0x01020304, 0x05060708]);\r\n\r\n  var keyiv = CryptoJS.PBKDF2(hash, salt, {\r\n      keySize: (256 + 128) / 32,\r\n      iterations: 1000\r\n  });\r\n\r\n  var key = CryptoJS.lib.WordArray.create(keyiv.words.slice(0, 8));\r\n  var iv = CryptoJS.lib.WordArray.create(keyiv.words.slice(8, 12));\r\n\r\n  var ciphertext = CryptoJS.AES.encrypt(username, key, {iv:iv});\r\n  var cipherstring = ciphertext.toString();\r\n\r\n  MatchToken(username, cipherstring)\r\n}\r\n\r\n\r\nfunction MatchToken(username: any, ciphertext: any) {\r\n\r\n  let [token, setToken] = React.useState<any>(undefined)\r\n\r\n\tReact.useEffect(() => {\r\n\t\tRestClient.getToken(username)\r\n\t\t          .then(token => setToken(token))\r\n              .catch((err) => alert(err))\r\n\t}, [])\r\n\r\n  var incomingToken = JSON.stringify(token);\r\n  var out = ciphertext\r\n  var outToken = '{\"token\":\"' + out + '\"}'\r\n\r\n  if (incomingToken == outToken) {\r\n\r\n    loggedIn = true\r\n  }\r\n  else {\r\n    loggedIn = false\r\n  }\r\n  LogInManager()\r\n}\r\n\r\nexport {\r\n  LogInManager,\r\n  EncryptData,\r\n  LogOut,\r\n  BackDoorLogIn\r\n}","import React from \"react\";\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button';\r\nimport { RestClient } from \"../RestClient\"\r\n\r\n\r\nexport default function AddConfig(environment: any) {\r\n    return (\r\n        <React.Fragment>\r\n            <AddConfiguration {...environment} />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nfunction AddConfiguration (environment: any) {\r\n\r\n    const [value, setValue] = React.useState(0) \r\n    let dateTime = new Date()\r\n    \r\n\tconst handleSubmit = (e: any) => {\r\n\t\te.preventDefault();\r\n\t\tlet configuration = {\r\n\t\t\tconfigName:         (document.getElementById(environment.environmentName + 'configName') as HTMLInputElement).value,\r\n\t\t\tapplication:        (document.getElementById(environment.environmentName + 'applicationName') as HTMLInputElement).value,\r\n\t\t\tconfigValue:        (document.getElementById(environment.environmentName + 'configValue') as HTMLInputElement).value,\r\n            timestamp:           dateTime.toISOString(),\r\n            environmentId:       environment.id\r\n\t\t}\r\n\t\tRestClient.addConfiguration(configuration)\r\n\t\t          .then( () => {\r\n\t\t\t\t\t  window.alert('Configuration Registered')\r\n\t\t\t\t\t  e.target.reset()\r\n\t\t\t\t\t  environment.configdatas.push(configuration)\r\n                      setValue(value => value + 1)\r\n\t\t\t\t  })\r\n\t\t\t\t  .catch( (e: any) => alert(e))\r\n\t}\r\n\r\n    return (\r\n        <div>\r\n        <Form onSubmit={handleSubmit}>\r\n            <Form.Group>\r\n                <Form.Control type=\"text\" maxLength={25}  id={environment.environmentName + 'configName'}      placeholder=\"Configuration Name\" />\r\n                <br />\r\n                <Form.Control type=\"text\" maxLength={25}  id={environment.environmentName + 'applicationName'} placeholder=\"Application Name\" />\r\n                <br />\r\n                <Form.Control type=\"text\" maxLength={200} id={environment.environmentName + 'configValue'}     placeholder=\"Value\" />\r\n                \r\n            </Form.Group>\r\n            <div className=\"submitButton\">\r\n                <Button as=\"input\" variant=\"info\" type=\"submit\" value=\"Submit\" />{' '}\r\n            </div>\r\n        </Form>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button';\r\nimport { RestClient } from \"../RestClient\"\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\n\r\nexport default function EditConfig(props: any) {\r\n    return (\r\n        <React.Fragment>\r\n            <EditConfiguration {...props} />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nfunction EditConfiguration(configdatas: any) {\r\n\r\n    const [value, setValue] = React.useState(0) \r\n\r\n    let dateTime = new Date()\r\n\r\n    const handleSubmit = (e: any) => {\r\n\t\te.preventDefault();\r\n        handleClose();\r\n\t\tlet configuration = {\r\n        id: configdatas.id,\r\n\t\t\t  configName:     (document.getElementById(configdatas.id + 'configName') as HTMLInputElement).value,\r\n\t\t  \tapplication:    (document.getElementById(configdatas.id + 'applicationName') as HTMLInputElement).value,\r\n\t\t\t  configValue:    (document.getElementById(configdatas.id + 'configValue') as HTMLInputElement).value,\r\n        timestamp:       dateTime.toISOString(),\r\n        environmentId:   configdatas.environmentId\r\n\t\t}\r\n\t\tRestClient.editConfiguration(configuration)\r\n\t\t          .then( () => {\r\n\t\t\t\t\t  window.alert('Configuration Registered')\r\n                      setValue(value => value + 1)\r\n\t\t\t\t  })\r\n\t\t\t\t  .catch( (e: any) => alert(e))\r\n\t}\r\n\r\n    const [show, setShow] = useState(false);\r\n  \r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n  \r\n    return (\r\n      <>\r\n        <Button variant=\"warning\" size=\"sm\" onClick={handleShow}>\r\n          Edit\r\n        </Button>\r\n  \r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Edit Configuration</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n          <Form>\r\n            <Form.Group>\r\n                Configuration Name<Form.Control  type=\"text\" maxLength={25}  id={configdatas.id + 'configName'}      defaultValue={configdatas.configName}  placeholder={configdatas.configName} />\r\n                <br />\r\n                Application Name<Form.Control    type=\"text\" maxLength={25}  id={configdatas.id + 'applicationName'} defaultValue={configdatas.application} placeholder={configdatas.application} />\r\n                <br />\r\n                Configuration Value<Form.Control type=\"text\" maxLength={200} id={configdatas.id + 'configValue'}     defaultValue={configdatas.configValue} placeholder={configdatas.configValue} />\r\n            </Form.Group>\r\n          </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit}>\r\n              Save Changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n  \r\n  \r\n\r\n  ","import React, { useState } from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button';\r\nimport { RestClient } from \"../RestClient\"\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\n\r\nexport default function EditEnv(props: any) {\r\n    return (\r\n        <React.Fragment>\r\n            <EditEnvironment {...props} />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nfunction EditEnvironment(environment: any) {\r\n\r\n    const [value, setValue] = React.useState(0) \r\n\r\n    const handleSubmit = (e: any) => {\r\n\t\te.preventDefault();\r\n        handleClose();\r\n\t\tlet newEnvironment = {\r\n            id: environment.id,\r\n\t\t\tenvironmentName:    (document.getElementById('environmentName') as HTMLInputElement).value,\r\n\t\t\tdescription:        (document.getElementById('description') as HTMLInputElement).value,\r\n\t\t}\r\n\t\tRestClient.editEnvironment(newEnvironment)\r\n\t\t          .then( () => {\r\n\t\t\t\t\t  window.alert('Change Registered')\r\n                      setValue(value => value + 1)\r\n\t\t\t\t  })\r\n\t\t\t\t  .catch( (e: any) => alert(e))\r\n\t}\r\n\r\n\r\n    const [show, setShow] = useState(false);\r\n  \r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n  \r\n    return (\r\n      <>\r\n        <Button variant=\"warning\" className=\"availEnvButton\" onClick={handleShow}>\r\n          Edit\r\n        </Button>\r\n  \r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Edit Environment</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n          <Form>\r\n            <Form.Group>\r\n                Environment Name<Form.Control        type=\"text\" id=\"environmentName\" maxLength={10} defaultValue={environment.environmentName} placeholder={environment.environmentName} />\r\n                <br />\r\n                Environment Description<Form.Control type=\"text\" id=\"description\"     maxLength={30} defaultValue={environment.description}     placeholder={environment.description} />\r\n            </Form.Group>\r\n          </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit}>\r\n              Save Changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n  \r\n  \r\n\r\n  ","import React, {useState} from \"react\";\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { RestClient } from \"../RestClient\"\r\n\r\n\r\nexport default function AddEnv() {\r\n    return (\r\n        <React.Fragment>\r\n            <AddEnvironment/>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nfunction AddEnvironment () {\r\n\r\n    const [value, setValue] = React.useState(0) \r\n    \r\n\tconst handleSubmit = (e: any) => {\r\n\t\te.preventDefault();\r\n        handleClose();\r\n\t\tlet environment = {\r\n\t\t\tenvironmentName:         (document.getElementById(\"environmentName\") as HTMLInputElement).value,\r\n\t\t\tdescription:        (document.getElementById(\"environmentDescription\") as HTMLInputElement).value,\r\n\r\n\t\t}\r\n\t\tRestClient.addEnvironment(environment)\r\n\t\t          .then( () => {\r\n\t\t\t\t\t  window.alert('Environment Registered')\r\n                      setValue(value => value + 1)\r\n\t\t\t\t  })\r\n\t\t\t\t  .catch( (e: any) => alert(e))\r\n\t}\r\n\r\n    const [show, setShow] = useState(false);\r\n  \r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n  \r\n    return (\r\n        <div className=\"addEnvButton\">\r\n        <Button variant=\"info\" onClick={handleShow}>\r\n        Add Environment\r\n        </Button>\r\n\r\n        <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n            <Modal.Title>Add Environment</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <Form>\r\n            <Form.Group>\r\n                Environment Name<Form.Control        type=\"text\" id=\"environmentName\" maxLength={10} placeholder=\"Environment Name\" />\r\n                <br />\r\n                Environment Description<Form.Control type=\"text\" id=\"environmentDescription\"     maxLength={30} placeholder=\"Description\" />\r\n            </Form.Group>\r\n        </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit}>\r\n            Save Changes\r\n            </Button>\r\n        </Modal.Footer>\r\n        </Modal>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport { RestClient } from \"../RestClient\"\r\nimport AddConfig from './AddConfiguration'\r\nimport DeleteConfiguration from './DeleteConfiguration'\r\nimport EditConfiguration from './EditConfiguration'\r\nimport EditEnvironment from './EditEnvironment'\r\nimport AddEnvironment from './AddEnvironment'\r\n\r\nexport default function WebPageConfigurations({header, subheader}: any) {\r\n    \r\n  \r\n  let [environments, setAvailableEnvironments] = React.useState<Array<any>>([])\r\n\r\n\tReact.useEffect(() => {\r\n\t\tRestClient.getEnvironments()\r\n\t\t          .then(environments => setAvailableEnvironments(environments))\r\n              .catch((err: any) => alert(err))\r\n\t}, [])\r\n  \r\n  \r\n  return (\r\n      <div className=\"configurations\">\r\n        <Container className=\"p-3\">\r\n            <Jumbotron>\r\n                <h1 className=\"header\">\r\n                {header}\r\n                </h1>\r\n            </Jumbotron>\r\n            <h2>{subheader}</h2>\r\n        </Container>\r\n        <React.Fragment>\r\n          <div className=\"listButton\">\r\n          {AddEnvironment()}\r\n          </div>\r\n        </React.Fragment>\r\n        <Accordion defaultActiveKey=\"0\">\r\n          {environments.map((props: any, i: any) =>\r\n            <div>\r\n                <Card>\r\n                    <Card.Header>\r\n                      <div className=\"buttons\">\r\n                        <div className=\"listButton\">\r\n                        <Accordion.Toggle as={Button} variant=\"primary\" eventKey={i+1} className=\"availEnvButton\">\r\n                            {props.environmentName}\r\n                        </Accordion.Toggle>\r\n                        </div>\r\n                        <div className=\"listButton\">\r\n                        <Accordion.Toggle as={Button} variant=\"success\" eventKey={i+100} className=\"listButton\">\r\n                            Add Configuration\r\n                        </Accordion.Toggle>\r\n                        </div>\r\n                        <div className=\"listButton\">\r\n                        <React.Fragment>\r\n                              {EditEnvironment(props)}\r\n                        </React.Fragment>\r\n                        </div>\r\n                      </div>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey={i+1}>\r\n                        <Card.Body className=\"cardBody-1\">\r\n                          <div className=\"environmentDescription\">\r\n                            <b>Environment Name: </b>{props.description}<br/>\r\n                            <b>Environment ID: </b>{props.id}<br/>                             \r\n                          </div>\r\n                          <br/><b>Configuration data:</b>\r\n                          <ListGroup>\r\n                            {props.configdatas.map((props2: any) =>\r\n                            <div>\r\n                              <ListGroup.Item>\r\n                                <div>\r\n                                  <b> Configuration Name: </b>{props2.configName}, \r\n                                  <b> Application Name: </b>{props2.application}, \r\n                                  <b> Configuration Value: </b>{props2.configValue}, \r\n                                  <b> Timestamp: </b>{props2.timestamp}\r\n                                  <div className=\"buttons\">\r\n                                    <React.Fragment>\r\n                                      <div className=\"listButton\">\r\n                                      {EditConfiguration(props2)}\r\n                                      </div>\r\n                                      <div className=\"listButton\">\r\n                                      {DeleteConfiguration(props2)}\r\n                                      </div>\r\n                                    </React.Fragment>\r\n                                  </div>\r\n                                </div>\r\n                              </ListGroup.Item>\r\n                            </div>\r\n                            )}\r\n                          </ListGroup>\r\n                        </Card.Body>\r\n                    </Accordion.Collapse>\r\n                    <Accordion.Collapse eventKey={i+100}>\r\n                      <Card.Body className=\"cardBody-1\">\r\n                      <div>\r\n                        <React.Fragment>\r\n                              {AddConfig(props)}\r\n                        </React.Fragment>\r\n                      </div>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            </div>            \r\n          )}\r\n        </Accordion> \r\n      </div>\r\n    );\r\n  }","import React from \"react\";\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button';\r\nimport { RestClient } from \"../RestClient\"\r\n\r\n\r\nexport default function DeleteConfiguration (configuration: any) {\r\n\r\n    \r\n\tconst handleSubmit = (e: any) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tRestClient.deleteConfiguration(configuration.id)\r\n\t\t          .then( () => {\r\n\t\t\t\t\t  window.alert('Configuration Deleted')\r\n\r\n\t\t\t\t  })\r\n\t\t\t\t  .catch( (e: any) => alert(e))\r\n\t}\r\n\r\n    return (\r\n        <div>\r\n        <Form onSubmit={handleSubmit}>\r\n                <Button as=\"input\" variant=\"danger\" size=\"sm\" type=\"submit\" value=\"Delete\" />{' '}\r\n        </Form>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport WebPageConfigurations from './WebPageConfigurations';\r\n\r\n\r\nfunction Configurations() {\r\n\r\n  const configurations = {\r\n    header: \"Environments and Configurations\",\r\n    subheader: \"\",\r\n  }\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t\t<div>\r\n          <React.Fragment>\r\n            <WebPageConfigurations {...configurations} />\r\n          </React.Fragment>\r\n        </div>\r\n\t\t</div>\r\n    )\r\n}\r\nexport default Configurations;\r\n\r\n\r\n","import React from 'react';\r\nimport WebPage from './WebPage';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { LogOut } from './LogIn'\r\n\r\nconst logOut = {\r\n  header: \"Log Out\",\r\n  subheader: \"This will be a log out page\",\r\n  listHeaders: []\r\n}\r\n\r\nexport default function Logn() {\r\n  return (\r\n    <div>\r\n      <Button variant=\"secondary\" onClick={LogOut}>\r\n        Log Out\r\n      </Button>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport WebPage from './WebPage';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { BackDoorLogIn } from './LogIn'\r\n\r\nconst logOut = {\r\n  header: \"Log Out\",\r\n  subheader: \"This will be a log out page\",\r\n  listHeaders: []\r\n}\r\n\r\nexport default function Logn() {\r\n  return (\r\n    <div>\r\n      <Button variant=\"secondary\" onClick={BackDoorLogIn}>\r\n        Log in without password\r\n      </Button>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\n","import './App.css';\r\n\r\nimport Sidebar from './Sidebar';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport About from './MenuOptions/About';\r\nimport Welcome from './MenuOptions/Welcome';\r\n\r\nimport AvailableEnvironments from './MenuOptions/AvailableEnvironments';\r\n\r\nimport { LogInManager } from './MenuOptions/LogIn'\r\nimport LogOut from './MenuOptions/LogOut';\r\nimport BackDoor from './MenuOptions/BackDoor'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <Router>\r\n        <div>\r\n          <Sidebar/>\r\n\r\n          <Switch>\r\n            <div className=\"pageView\">           \r\n\r\n          <Route exact path=\"/\" >\r\n            <Welcome/>\r\n          </Route>\r\n\r\n          <Route exact path=\"/about\">\r\n            <About/>\r\n          </Route>\r\n\r\n\r\n          <Route path=\"/availableEnvironments\">\r\n            <AvailableEnvironments/>\r\n          </Route>\r\n\r\n\r\n          <Route path=\"/configurations\">\r\n            <LogInManager/>\r\n          </Route>\r\n\r\n          <Route path=\"/logOut\">\r\n            <LogOut/>\r\n          </Route>\r\n\r\n          <Route path=\"/secretbackdoor\">\r\n            <BackDoor/>\r\n          </Route>\r\n\r\n          </div>\r\n          </Switch>\r\n        </div>\r\n        </Router>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}